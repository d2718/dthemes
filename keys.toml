# Syntax Scopes

"attribute"  # - Class attributes, HTML tag attributes

"type"         # Types
"type.builtin" # Primitive types provided by the language (int, usize)
"type.enum"
"type.enum.variant"

"constructor"

"constant"
"constant.builtin"            # Special constants provided by the language
                            # (true, false, nil etc)
"constant.builtin.boolean"
"constant.character"
"constant.character.escape"
"constant.numeric"            # (numbers)
"constant.numeric.integer"
"constant.numeric.float"

"string"
"string.regexp"         # Regular expressions
"string.special"
"string.special.path"
"string.special.url"
"string.special.symbol" # Erlang/Elixir atoms, Ruby symbols, Clojure keywords

"comment"                     # Code comments
"comment.line"                # Single line comments (//)
"comment.block"               # Block comments (e.g. (/* */)
"comment.block.documentation" # Documentation comments (e.g. /// in Rust)

"variable"                # Variables
"variable.builtin"        # Reserved language variables (self, this, super, etc.)
"variable.parameter"      # Function parameters
"variable.other"
"variable.other.member"   # Fields of composite data types (e.g. structs, unions)

"label"

"punctuation"
"punctuation.delimiter"   # Commas, colons
"punctuation.bracket"     # Parentheses, angle brackets, etc.
"punctuation.special"     # String interpolation brackets.

"keyword"
"keyword.control"
"keyword.control.conditional" # if, else
"keyword.control.repeat"      # for, while, loop
"keyword.control.import"      # import, export
"keyword.control.return"
"keyword.control.exception"
"keyword.operator"         # or, in
"keyword.directive"        # Preprocessor directives (#if in C)
"keyword.function"         # fn, func
"keyword.storage"          # Keywords describing how things are stored
"keyword.storage.type"     # The type of something, class, function, var, let, $c
"keyword.storage.modifier" # Storage modifiers like static, mut, const, ref, &c

"operator"    # ||, +=, >

"function"
"function.builtin"
"function.method"
"function.macro"
"function.special"    # (preprocessor in C)

"tag"         # Tags (e.g. <body> in HTML)
"tag.builtin"

"namespace"

"special"

"markup"
"markup.heading"
"markup.heading.marker"
"markup.heading.1"    # heading text for h1 through h6
"markup.heading.2"
"markup.heading.3"
"markup.heading.4"
"markup.heading.5"
"markup.heading.6" 
"markup.list"
"markup.list.unnumbered"
"markup.list.numbered"
"markup.list.checked"
"markup.list.unchecked"
"markup.bold"
"markup.italic"
"markup.strikethrough"
"markup.link"
"markup.link.url"     # URLs pointed to by links
"markup.link.label"   #  non-URL link references
"markup.link.text"    # URL and image descriptions in links
"markup.quote"
"markup.raw"
"markup.raw.inline"
"markup.raw.block"

"diff"                # version control changes
"diff.plus"           # additions
"diff.minus"          # deletions
"diff.delta"          # modifications
"diff.delta.moved"    # renamed or moved files/changes

# UI

# These markup scopes are used for themeing the editor interface.

"markup.normal"
"markup.normal.completion"        # for completion doc popup UI
"markup.normal.hover"             # for hover popup UI
# markup.heading    [already defined above]
"markup.heading.completion"       # for completion doc popup UI
"markup.heading.hover"            # for hover popup UI
# markup.raw        [ already defined above]
# markup.raw.inline [ already defined above]
"markup.raw.inline.completion"    # for completion doc popup UI
"markup.raw.inline.hover"         # for hover popup UI

"ui.background"   
"ui.background.separator"     # Picker separator below input line

"ui.cursor"   
"ui.cursor.normal"    
"ui.cursor.insert"    
"ui.cursor.select"    
"ui.cursor.match"     # Matching bracket etc.
"ui.cursor.primary"   # Cursor with primary selection
"ui.cursor.primary.normal"    
"ui.cursor.primary.insert"    
"ui.cursor.primary.select"

"ui.debug.breakpoint"     # Breakpoint indicator, found in the gutter
"ui.debug.active"         # Indicator for the line at which debugging execution
                        # is paused at, found in the gutter
"ui.gutter"               # Gutter
"ui.gutter.selected"      # Gutter for the line the cursor is on
"ui.highlight.frameline"  # Line at which debugging execution is paused at
"ui.linenr"               # Line numbers
"ui.linenr.selected"      # Line number for the line the cursor is on

"ui.statusline"           # Statusline
"ui.statusline.inactive"  # Statusline (unfocused document)
"ui.statusline.normal"    # Statusline mode during normal mode (only if editor.color-modes is enabled)
"ui.statusline.insert"    # Statusline mode during insert mode (only if editor.color-modes is enabled)
"ui.statusline.select"    # Statusline mode during select mode (only if editor.color-modes is enabled)
"ui.statusline.separator" # Separator character in statusline

"ui.popup"                # Documentation popups (e.g. Space + k)
"ui.popup.info"           # Prompt for multiple key options
"ui.window"               # Borderlines separating splits
"ui.help"                 # Description box for commands
"ui.text"                 # Command prompts, popup text, etc.
"ui.text.focus"   
"ui.text.inactive"        # Same as ui.text but when the text is inactive
                        # (e.g. suggestions)
"ui.text.info"            # The key: command text in ui.popup.info boxes

"ui.virtual.ruler"        # Ruler columns (see the editor.rulers config)
"ui.virtual.whitespace"   # Visible whitespace characters
"ui.virtual.indent-guide" # Vertical indent width guides
"ui.virtual.inlay-hint"   # Default style for inlay hints of all kinds
"ui.virtual.inlay-hint.parameter" # Style for inlay hints of kind parameter
                                # (LSPs are not required to set a kind)
"ui.virtual.inlay-hint.type"      # Style for inlay hints of kind type
                                # (LSPs are not required to set a kind)
"ui.virtual.wrap"         # Soft-wrap indicator (see the editor.soft-wrap config)

"ui.menu"             # Code and command completion menus
"ui.menu.selected"    # Selected autocomplete item
"ui.menu.scroll"      # fg sets thumb color, bg sets track color of scrollbar
"ui.selection"        # For selections in the editing area
"ui.selection.primary"
"ui.highlight"        # Highlighted lines in the picker preview

                            # (only if cursorline is enabled)
"ui.cursorline.primary"       # The line of the primary cursor
"ui.cursorline.secondary"     # The lines of any other cursors
"ui.cursorcolumn.primary"     # The column of the primary cursor
"ui.cursorcolumn.secondary"   # The columns of any other cursors

"warning"             # Diagnostics warning (gutter)
"error"               E Diagnostics error (gutter)
"info"                # Diagnostics info (gutter)
"hint"                # Diagnostics hint (gutter)
"diagnostic"          # Diagnostics fallback style (editing area)
"diagnostic.hint"     # Diagnostics hint (editing area)
"diagnostic.info"     # Diagnostics info (editing area)
"diagnostic.warning"  # Diagnostics warning (editing area)
"diagnostic.error"    # Diagnostics error (editing area)
